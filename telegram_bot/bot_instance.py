import telebot
from core import TELEGRAM_API
from .bot_services import (
    start_response,
    main_menu,
    category_menu,
    gimme_tags,
    random_select,
    random_generate,
    toast_decider,
    text_decider)

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = telebot.TeleBot(TELEGRAM_API)


@bot.message_handler(commands=["start"])
def start(message):
    """
    Endpoint –¥–ª—è –∫–æ–º–∞–Ω–¥—ã start
    """
    response, markup = start_response(chat_id=message.chat.id)
    bot.send_message(message.chat.id, response.format(
        message.chat.first_name), reply_markup=markup, parse_mode='Markdown')


@bot.message_handler(commands=["help", "menu"])
def menu(message):
    """ 
    Endpoint –¥–ª—è –∫–æ–º–∞–Ω–¥ help –∏ menu
    """
    response, markup = main_menu(
        chat_id=message.chat.id, help=message.text == "/help")
    bot.send_message(message.chat.id, response, reply_markup=markup,
                     parse_mode='Markdown')


@bot.message_handler(commands=["select_random_toast"])
def select_random(message):
    """
    Endpoint –¥–ª—è –∫–æ–º–∞–Ω–¥—ã select_random_toast (–í—ã–±–µ—Ä–∏ –ª—é–±–æ–π —Ç–æ—Å—Ç)
    """
    response, markup = random_select(chat_id=message.chat.id)
    bot.send_message(message.chat.id, response, reply_markup=markup,
                     parse_mode='Markdown')


@bot.message_handler(commands=["generate_random_toast"])
def generate_random(message):
    """
    Endpoint –¥–ª—è –∫–æ–º–∞–Ω–¥—ã generate_random_toast (–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–æ—Å—Ç)
    """
    response, markup = random_generate(chat_id=message.chat.id)
    bot.send_message(message.chat.id, response, reply_markup=markup,
                     parse_mode='Markdown')


@bot.message_handler(commands=["select_keywords_toast", "generate_keywords_toast"])
def return_keywords_toast(message):
    """
    Endpoint –¥–ª—è –∫–æ–º–∞–Ω–¥ select_keywords_toast (–í—ã–±–µ—Ä–∏ —Ç–æ—Å—Ç –ø–æ —Ç–µ–≥–∞–º) –∏ generate_keywords_toast (–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–æ—Å—Ç –ø–æ —Ç–µ–≥–∞–º)
    """
    stage_name = 'select tag choose' if message.text == "/select_keywords_toast" else 'generate tag choose'
    response, markup = gimme_tags(
        chat_id=message.chat.id, stage_name=stage_name)
    bot.send_message(message.chat.id, response, reply_markup=markup,
                     parse_mode='Markdown')


@bot.message_handler(content_types=["text"])
def handle_text(message):
    """
    Endpoint –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    """
    if message.text in ["–ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é", "–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å!", "–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å", "–ù–∞ –≥–ª–∞–≤–Ω—É—é"]:
        response, markup = main_menu(
            chat_id=message.chat.id, help=message.text in ["–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å!", "–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å"])
    elif message.text in ["–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–æ—Å—Ç", "–í—ã–±–µ—Ä–∏ —Ç–æ—Å—Ç"]:
        request = 'select menu' if message.text == "–í—ã–±–µ—Ä–∏ —Ç–æ—Å—Ç" else 'generate menu'
        response, markup = category_menu(
            stage_name=request, chat_id=message.chat.id)
    elif message.text in ["–¢–æ—Å—Ç –ø–æ —Ç–µ–≥–∞–º", "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–≥–∏"]:
        response, markup = gimme_tags(
            chat_id=message.chat.id, update=message.text == "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–≥–∏")
    elif message.text in ["–†–∞–Ω–¥–æ–º–Ω—ã–π —Ç–æ—Å—Ç", "üëé", "üëç"]:
        response, markup = toast_decider(
            chat_id=message.chat.id, prev_reaction=message.text != "üëé")
    else:
        response, markup = text_decider(
            chat_id=message.chat.id, message=message.text)
    bot.send_message(message.chat.id, response,
                     reply_markup=markup, parse_mode='Markdown')
